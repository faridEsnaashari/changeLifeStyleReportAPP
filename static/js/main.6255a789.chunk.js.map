{"version":3,"sources":["tools/statusCodes.js","APIs/actionsTypes/sendReportsActionsTypes.js","APIs/reducers/sendReports/sendReportsReducer.js","APIs/APICallers/APICallers.js","tools/config.js","APIs/actions/sendReports/sendReportsAction.js","components/GeneralComponents/LoadingCircle/LoadingCircle.jsx","routes/report/index.js","pages/report/index.jsx","routers/report/index.jsx","routes/inputId/index.js","pages/inputId/index.jsx","routers/inputId/index.jsx","App.js","index.js"],"names":["statusCodesDictionary","REQUESTED_SEND_REPORTS","RECIVED_SEND_REPORTS","FAILED_SEND_REPORTS","sendReportsInitialState","isFetching","status","data","error","sendReportsReducer","state","action","currentState","type","statusCode","payload","axios","defaults","baseURL","useAPICaller","useReducer","sendReportsResult","sendReportsDispatch","sendReportsCaller","params","dispatch","get","then","response","catch","err","LoadingCircle","props","color","size","getStyle","style","borderTopColor","borderWidth","className","routes","path","component","history","useHistory","useEffect","localStorage","getItem","push","sendReportsAction","useState","porn","sigrate","alcohol","ghand","water","reading","exsersize","sleep","shower","reportItems","setReportItems","onValueChanged","item","preparedReportItems","checked","onChange","onClick","id","ReportRouter","url","useRouteMatch","map","route","index","inputRef","useRef","idError","setIdError","ref","current","value","setItem","App","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAAaA,EAAwB,CACjC,IAAO,iBACP,IAAO,eACP,IAAO,gBACP,IAAO,sBACP,IAAO,cACP,IAAO,qBACP,IAAO,oBCPEC,EAAyB,yBACzBC,EAAuB,uBACvBC,EAAsB,sBCMtBC,EAA0B,CACnCC,YAAY,EACZC,OAAQ,KACRC,KAAM,KACNC,MAAO,MAGEC,EAAqB,SAACC,EAAOC,GACtC,IAAIC,EAAe,CAAC,EAEpB,OAAOD,EAAOE,MACV,KAAKZ,EACDW,EAAe,CACXP,YAAY,EACZC,OAAQ,KACRC,KAAM,KACNC,MAAO,MAEX,MAEJ,KAAKN,EACDU,EAAe,CACXP,YAAY,EACZC,OAAQN,EAAsBW,EAAOG,YACrCP,KAAMI,EAAOI,QAAQR,KACrBC,MAAO,MAEX,MAEJ,KAAKL,EACDS,EAAe,CACXP,YAAY,EACZC,OAAQN,EAAsBW,EAAOG,YACrCP,KAAM,KACNC,MAAOG,EAAOI,SAElB,MAEJ,QACIH,EAAeF,EAGvB,OAAOE,CACX,ECpCAI,IAAMC,SAASC,QCfC,6DDiBT,IASQC,EATa,WACxB,MAAmDC,qBAAWX,EAAoBL,GAAwB,mBAAlGiB,EAAiB,KAAEC,EAAmB,KAG9C,MAAO,CACHC,kBAAmB,CAHH,SAAAhB,GAAI,OEVgBiB,EFU2BjB,GEVrCkB,EFUgBH,GETrC,CAAET,KAAMZ,SAEjBe,IAAMU,IAAI,UAAW,CAAEF,WAClBG,MAAK,SAAAC,GAAQ,OAAIH,EAAS,CACvBZ,KAAMX,EACNY,WAAYc,EAAStB,OACrBS,QAASa,EAASrB,MACpB,IACDsB,OAAM,SAAAC,GAAG,OAAIL,EAAS,CACnBZ,KAAMV,EACNW,WAAYgB,EAAIF,UAAYE,EAAIF,SAAStB,OACzCS,QAASe,EAAIF,UAAYE,EAAIF,SAASrB,MACxC,IAbuB,IAACkB,EAAUD,CFUiC,EAGnCH,GAE1C,E,eGeeU,EArCO,SAAAC,GAClB,IACIC,EAEAD,EAFAC,MACAC,EACAF,EADAE,KAGEC,EAAW,WACb,IAAMC,EAAQ,CAAC,EAUf,OARGH,IACCG,EAAMC,eAAiBJ,GAGxBC,IACCE,EAAME,YAAcJ,EAAO,MAGxBE,CACX,EAEA,OACI,sBAAKG,UAAU,gCAA+B,UAC1C,qBACIH,MAAUD,IACVI,UAAU,yBAId,qBACIH,MAAUD,IACVI,UAAU,4BAK1B,EC5BeC,EAPA,CACX,CACIC,KAAM,GACNC,UCIW,SAAAV,GAEf,IAAMW,EAAUC,cAEhBC,qBAAU,WACKC,aAAaC,QAAQ,OAE7BJ,EAAQK,KAAK,MAEpB,GAAG,IAEH,kBAAiD7B,IAAeI,kBAAiB,GAAzE0B,EAAiB,KAAE5B,EAAiB,KAE5C,EAAwC6B,mBAAS,CAC7CC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,OAAO,EACPC,OAAO,EACPC,SAAS,EACTC,WAAW,EACXC,OAAO,EACPC,QAAQ,IACV,mBAVMC,EAAW,KAAEC,EAAc,KAY7BC,EAAiB,SAAAC,GACnB,IAAMC,EAAmB,eAAQJ,GACjCI,EAAoBD,IAASH,EAAYG,GAEzCF,EAAeG,EACnB,EAOA,OACI,sBAAKzB,UAAU,wBAAuB,UAClC,kCAAO,oDAEH,uBAAO1B,KAAK,WAAWoD,QAAUL,EAAYT,KAAOe,SAAW,kBAAMJ,EAAe,OAAO,IAC3F,sBAAMvB,UAAU,0BAEpB,kCAAO,0DAEH,uBAAO1B,KAAK,WAAWoD,QAAUL,EAAYR,QAAUc,SAAW,kBAAMJ,EAAe,UAAU,IACjG,sBAAMvB,UAAU,0BAEpB,kCAAO,oDAEH,uBAAO1B,KAAK,WAAWoD,QAAUL,EAAYP,QAAUa,SAAW,kBAAMJ,EAAe,UAAU,IACjG,sBAAMvB,UAAU,0BAEpB,kCAAO,mFAEH,uBAAO1B,KAAK,WAAWoD,QAAUL,EAAYN,MAAQY,SAAW,kBAAMJ,EAAe,QAAQ,IAC7F,sBAAMvB,UAAU,0BAEpB,kCAAO,sDAEH,uBAAO1B,KAAK,WAAWoD,QAAUL,EAAYL,MAAQW,SAAW,kBAAMJ,EAAe,QAAQ,IAC7F,sBAAMvB,UAAU,0BAEpB,kCAAO,uCAEH,uBAAO1B,KAAK,WAAWoD,QAAUL,EAAYJ,QAAUU,SAAW,kBAAMJ,EAAe,UAAU,IACjG,sBAAMvB,UAAU,0BAEpB,kCAAO,iCAEH,uBAAO1B,KAAK,WAAWoD,QAAUL,EAAYH,UAAYS,SAAW,kBAAMJ,EAAe,YAAY,IACrG,sBAAMvB,UAAU,0BAEpB,kCAAO,2DAEH,uBAAO1B,KAAK,WAAWoD,QAAUL,EAAYF,MAAQQ,SAAW,kBAAMJ,EAAe,QAAQ,IAC7F,sBAAMvB,UAAU,0BAEpB,kCAAO,qDAEH,uBAAO1B,KAAK,WAAWoD,QAAUL,EAAYD,OAASO,SAAW,kBAAMJ,EAAe,SAAS,IAC/F,sBAAMvB,UAAU,0BAEpB,qBAAKA,UAAU,gBAAgB4B,QApDtB,WACb,IAAMC,EAAKtB,aAAaC,QAAQ,MAChCE,EAAkB,2BAAKW,GAAW,IAAEQ,OACxC,EAiD2D,SAE3C/C,EAAkBhB,WAEV,8BACI,cAAC,EAAa,CAAC4B,MAAM,UAAUC,KAAK,QAGxC,+BAAM,sEAKlC,ICrFemC,EAjBM,SAAArC,GAEjB,IAAQsC,EAAQC,cAARD,IAQR,OACI,cAAC,IAAM,UAPa9B,EAAOgC,KAAI,SAACC,EAAOC,GAAK,OAC5C,cAAC,IAAK,CAAejC,KAAI,UAAM6B,GAAG,OAAKG,EAAMhC,MAAQ,SACjD,cAACgC,EAAM/B,UAAS,KADPgC,EAEL,KAQhB,ECVelC,G,MAPA,CACX,CACIC,KAAM,GACNC,UCAY,SAAAV,GAEhB,IAAMW,EAAUC,cAEV+B,EAAWC,iBAAO,MAExB,EAAgC1B,oBAAS,GAAM,mBAAvC2B,EAAO,KAAEC,EAAU,KAa3B,OACI,qBAAKvC,UAAU,sBAAqB,SAChC,sBAAKA,UAAU,uBAAsB,UACjC,sBAAMA,UAAU,UAAS,SAAC,MAC1B,+BAAM,+GACN,uBAAOwC,IAAMJ,EAAW9D,KAAK,SAC7B,qBAAK0B,UAAU,gBAAgB4B,QAjB3B,WACZ,IAAMC,EAAKO,EAASK,QAAQC,MAE5B,IAAIb,EACA,OAAOU,GAAW,GAGtBhC,aAAaoC,QAAQ,KAAMd,GAC3BzB,EAAQK,KAAK,SACjB,EAQ8D,SAAC,6BACjD6B,GAAW,sBAAMtC,UAAU,WAAU,SAAC,mHAKxD,KCfe8B,EAjBM,SAAArC,GAEjB,IAAQsC,EAAQC,cAARD,IAQR,OACI,cAAC,IAAM,UAPa9B,EAAOgC,KAAI,SAACC,EAAOC,GAAK,OAC5C,cAAC,IAAK,CAAejC,KAAI,UAAM6B,GAAG,OAAKG,EAAMhC,MAAQ,SACjD,cAACgC,EAAM/B,UAAS,KADPgC,EAEL,KAQhB,ECGeS,G,MAfH,WACR,OACI,cAAC,IAAM,UACH,eAAC,IAAM,WACH,cAAC,IAAK,CAAC1C,KAAK,UAAS,SACjB,cAAC,EAAY,MAEjB,cAAC,IAAK,CAACA,KAAK,MAAK,SACb,cAAC,EAAa,MAElB,cAAC,IAAQ,CAACO,MAAI,EAACoC,GAAG,gBAIlC,GCjBAC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.6255a789.chunk.js","sourcesContent":["export const statusCodesDictionary = {\n    \"400\": \"VALIDATION_ERR\",\n    \"404\": \"NOTFOUND_ERR\",\n    \"409\": \"CONFILICT_ERR\",\n    \"500\": \"INTERNAL_SERVER_ERR\",\n    \"200\": \"SUCCESS_MSG\",\n    \"201\": \"SUCCESS_CREATE_MSG\",\n    \"401\": \"UNAUTHORIZED_ERR\",\n};\n\nexport const VALIDATION_ERR = \"VALIDATION_ERR\";\nexport const NOTFOUND_ERR = \"NOTFOUND_ERR\";\nexport const CONFILICT_ERR = \"CONFILICT_ERR\";\nexport const INTERNAL_SERVER_ERR = \"INTERNAL_SERVER_ERR\";\nexport const SUCCESS_MSG = \"SUCCESS_MSG\";\nexport const SUCCESS_CREATE_MSG = \"SUCCESS_CREATE_MSG\";\nexport const UNAUTHORIZED_ERR = \"UNAUTHORIZED_ERR\";\n","export const REQUESTED_SEND_REPORTS = \"REQUESTED_SEND_REPORTS\";\nexport const RECIVED_SEND_REPORTS = \"RECIVED_SEND_REPORTS\";\nexport const FAILED_SEND_REPORTS = \"FAILED_SEND_REPORTS\";\n","import { statusCodesDictionary } from \"../../../tools/statusCodes\";\n\nimport {\n    RECIVED_SEND_REPORTS,\n    REQUESTED_SEND_REPORTS,\n    FAILED_SEND_REPORTS,\n} from \"../../actionsTypes/sendReportsActionsTypes\";\n\nexport const sendReportsInitialState = {\n    isFetching: false,\n    status: null,\n    data: null,\n    error: null,\n};\n\nexport const sendReportsReducer = (state, action) => {\n    let currentState = {};\n\n    switch(action.type){\n        case REQUESTED_SEND_REPORTS: \n            currentState = {\n                isFetching: true,\n                status: null,\n                data: null,\n                error: null,\n            };\n            break;\n\n        case RECIVED_SEND_REPORTS: \n            currentState = {\n                isFetching: false,\n                status: statusCodesDictionary[action.statusCode],\n                data: action.payload.data,\n                error: null,\n            };\n            break;\n\n        case FAILED_SEND_REPORTS: \n            currentState = {\n                isFetching: false,\n                status: statusCodesDictionary[action.statusCode],\n                data: null,\n                error: action.payload,\n            };\n            break;\n            \n        default: \n            currentState = state;\n    }\n\n    return currentState;\n};\n\n","import { useReducer } from \"react\";\n\nimport { API_URL } from \"../../tools/config\";\nimport axios from \"axios\";\n\nimport {\n    sendReportsReducer,\n    \n    sendReportsInitialState,\n} from \"../reducers/sendReports/sendReportsReducer\";\n\nimport { \n    sendReportsAction,\n} from \"../actions/sendReports/sendReportsAction\";\n\naxios.defaults.baseURL = API_URL;\n\nexport const useAPICaller = () => {\n    const [ sendReportsResult, sendReportsDispatch ] = useReducer(sendReportsReducer, sendReportsInitialState);\n    const sendReports = data => sendReportsAction(sendReportsDispatch, data);\n\n    return { \n        sendReportsCaller: [ sendReports, sendReportsResult ],\n    };\n};\n\nexport default useAPICaller;\n","const API_URL = \"https://changelifestylereportapi-production.up.railway.app\";\nconst APP_URL = \"http://localhost:3000\";\n\nexport { API_URL, APP_URL };\n","import axios from \"axios\";\n\nimport {\n    RECIVED_SEND_REPORTS,\n    REQUESTED_SEND_REPORTS,\n    FAILED_SEND_REPORTS,\n\n} from \"../../actionsTypes/sendReportsActionsTypes\";\n\nexport const sendReportsAction = (dispatch, params) => {\n    dispatch({ type: REQUESTED_SEND_REPORTS });\n\n    axios.get(`/report`, { params })\n        .then(response => dispatch({\n            type: RECIVED_SEND_REPORTS,\n            statusCode: response.status,\n            payload: response.data,\n        }))\n        .catch(err => dispatch({\n            type: FAILED_SEND_REPORTS,\n            statusCode: err.response && err.response.status,\n            payload: err.response && err.response.data,\n        }));\n};\n","import \"./loadingCircleStyles.css\";\n\nconst LoadingCircle = props => {\n    const {\n        color,\n        size,\n    } = props;\n\n    const getStyle = () => {\n        const style = {};\n\n        if(color){\n            style.borderTopColor = color;\n        }\n\n        if(size){\n            style.borderWidth = size + \"px\";\n        }\n\n        return style;\n    };\n\n    return(\n        <div className=\"loading-circle-main-container\">\n            <div \n                style = { getStyle() }\n                className=\"first-loading-circle\"\n            >\n            </div>\n\n            <div \n                style = { getStyle() }\n                className=\"second-loading-circle\"\n            >\n            </div>\n        </div>\n    );\n};\n\nexport default LoadingCircle;\n","import ReportPage from \"../../pages/report\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: ReportPage,\n    }\n];\n\nexport default routes;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./indexStyles.css\";\n\nimport useAPICaller from \"../../APIs/APICallers/APICallers\";\n\nimport LoadingCircle from \"../../components/GeneralComponents/LoadingCircle/LoadingCircle\";\n\nconst ReportPage = props => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const id = localStorage.getItem(\"id\");\n        if(!id){\n           history.push(\"/id\");\n        }\n    }, []);\n\n    const [ sendReportsAction, sendReportsResult ] = useAPICaller().sendReportsCaller;\n\n    const [ reportItems, setReportItems ] = useState({\n        porn: false,\n        sigrate: false,\n        alcohol: false,\n        ghand: false,\n        water: false,\n        reading: false,\n        exsersize: false,\n        sleep: false,\n        shower: false,\n    });\n\n    const onValueChanged = item => {\n        const preparedReportItems = { ...reportItems };\n        preparedReportItems[item] = !reportItems[item];\n\n        setReportItems(preparedReportItems);\n    };\n\n    const onSubmit = () => {\n        const id = localStorage.getItem(\"id\");\n        sendReportsAction({ ...reportItems, id });\n    };\n\n    return(\n        <div className=\"report-main-container\">\n            <label>\n                بدون پورن\n                <input type=\"checkbox\" checked={ reportItems.porn } onChange={ () => onValueChanged(\"porn\") }/>\n                <span className=\"radio-button-style\"/>\n            </label>\n            <label>\n                بدون سیگار \n                <input type=\"checkbox\" checked={ reportItems.sigrate } onChange={ () => onValueChanged(\"sigrate\") }/>\n                <span className=\"radio-button-style\"/>\n            </label>\n            <label>\n                بدون الکل\n                <input type=\"checkbox\" checked={ reportItems.alcohol } onChange={ () => onValueChanged(\"alcohol\") }/>\n                <span className=\"radio-button-style\"/>\n            </label>\n            <label>\n                بدون قند مصنوعی\n                <input type=\"checkbox\" checked={ reportItems.ghand } onChange={ () => onValueChanged(\"ghand\") }/>\n                <span className=\"radio-button-style\"/>\n            </label>\n            <label>\n                ۱/۵ لیتر آب\n                <input type=\"checkbox\" checked={ reportItems.water } onChange={ () => onValueChanged(\"water\") }/>\n                <span className=\"radio-button-style\"/>\n            </label>\n            <label>\n                مطالعه\n                <input type=\"checkbox\" checked={ reportItems.reading } onChange={ () => onValueChanged(\"reading\") }/>\n                <span className=\"radio-button-style\"/>\n            </label>\n            <label>\n                تمرین\n                <input type=\"checkbox\" checked={ reportItems.exsersize } onChange={ () => onValueChanged(\"exsersize\") }/>\n                <span className=\"radio-button-style\"/>\n            </label>\n            <label>\n                ۸ ساعت خواب\n                <input type=\"checkbox\" checked={ reportItems.sleep } onChange={ () => onValueChanged(\"sleep\") }/>\n                <span className=\"radio-button-style\"/>\n            </label>\n            <label>\n                دوش آب سرد\n                <input type=\"checkbox\" checked={ reportItems.shower } onChange={ () => onValueChanged(\"shower\") }/>\n                <span className=\"radio-button-style\"/>\n            </label>\n            <div className=\"submit-botton\" onClick={ onSubmit }>\n                {\n                    sendReportsResult.isFetching \n                        ?\n                            <div>\n                                <LoadingCircle color=\"#f7d20c\" size=\"3\"/>\n                            </div>\n                            :\n                            <span>ارسال گزارش</span>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default ReportPage;\n","import { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nimport routes from \"../../routes/report\";\n\nconst ReportRouter = props => {\n\n    const { url } = useRouteMatch();\n\n    const getRoutes = () => routes.map((route, index) => (\n        <Route key={ index } path={`${ url }${ route.path }`}>\n            <route.component/>\n        </Route>\n    ));\n\n    return(\n        <Switch>\n            { getRoutes() }\n        </Switch>\n    );\n};\n\nexport default ReportRouter;\n","import InputIdPage from \"../../pages/inputId\";\n\nconst routes = [\n    {\n        path: \"\",\n        component: InputIdPage,\n    }\n];\n\nexport default routes;\n","import { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./indexStyles.css\";\n\nconst InputIdPage = props => {\n\n    const history = useHistory();\n\n    const inputRef = useRef(null);\n\n    const [ idError, setIdError ] = useState(false);\n\n    const onClick = () => {\n        const id = inputRef.current.value;\n\n        if(!id){\n            return setIdError(true);\n        }\n\n        localStorage.setItem(\"id\", id);\n        history.push(\"report\");\n    };\n\n    return(\n        <div className=\"name-main-container\">\n            <div className=\"name-input-container\">\n                <span className=\"id-mark\">@</span>\n                <span>آیدی خود را وارد کنید</span>\n                <input ref={ inputRef } type=\"text\"/>\n                <div className=\"submit-button\" onClick={ onClick }>ورود</div>\n                { idError && <span className=\"id-error\">آیدی خود را وارد کنید</span> }\n                \n            </div>\n        </div>\n    );\n};\n\nexport default InputIdPage;\n","import { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nimport routes from \"../../routes/inputId\";\n\nconst ReportRouter = props => {\n\n    const { url } = useRouteMatch();\n\n    const getRoutes = () => routes.map((route, index) => (\n        <Route key={ index } path={`${ url }${ route.path }`}>\n            <route.component/>\n        </Route>\n    ));\n\n    return(\n        <Switch>\n            { getRoutes() }\n        </Switch>\n    );\n};\n\nexport default ReportRouter;\n","import { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport ReportRouter from \"./routers/report\";\nimport InputIdRouter from \"./routers/inputId\";\n\nimport \"./App.css\";\n\nconst App = () => {\n    return(\n        <Router>\n            <Switch>\n                <Route path=\"/report\">\n                    <ReportRouter/>\n                </Route>\n                <Route path=\"/id\">\n                    <InputIdRouter/>\n                </Route>\n                <Redirect push to=\"/report\"/>\n            </Switch>\n        </Router>\n    );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}